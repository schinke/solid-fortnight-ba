"""empty message

Revision ID: c531833fb3ea
Revises: None
Create Date: 2016-08-02 00:23:22.896419

"""

# revision identifiers, used by Alembic.
revision = 'c531833fb3ea'
down_revision = None

from alembic import op
import sqlalchemy as sa


def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('allergene',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('shortname', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('nutrient',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('shortname', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('process',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('results',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('synonym',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('tag',
    sa.Column('name', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('name')
    )
    op.create_table('product',
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('englishName', sa.String(), nullable=True),
    sa.Column('frenchName', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('specification', sa.String(), nullable=True),
    sa.Column('standardOrigin_id', sa.Integer(), nullable=True),
    sa.Column('startOfLocalSeason', sa.Date(), nullable=True),
    sa.Column('endOfLocalSeason', sa.Date(), nullable=True),
    sa.Column('commentsOnDensityAndUnitWeight', sa.String(), nullable=True),
    sa.Column('texture', sa.String(), nullable=True),
    sa.Column('infoTextForCook', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['standardOrigin_id'], ['location.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('scivalue',
    sa.Column('type', sa.String(length=50), nullable=True),
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reference_id', sa.Integer(), nullable=True),
    sa.Column('base_value_id', sa.Integer(), nullable=True),
    sa.Column('amount', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['base_value_id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['reference_id'], ['reference.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('co2',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('scivalue', sa.String(), nullable=True),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('density',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('edb_product',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('foodwaste',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('location_prod_association',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('product_id', 'location_id')
    )
    op.create_table('location_scivalue_association',
    sa.Column('location_id', sa.Integer(), nullable=False),
    sa.Column('scivalue_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['location_id'], ['location.id'], ),
    sa.ForeignKeyConstraint(['scivalue_id'], ['scivalue.id'], ),
    sa.PrimaryKeyConstraint('location_id', 'scivalue_id')
    )
    op.create_table('prod_allergene_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('allergene_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['allergene_id'], ['allergene.id'], ),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prod_alternatives',
    sa.Column('product_id_1', sa.Integer(), nullable=False),
    sa.Column('product_id_2', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['product_id_1'], ['product.id'], ),
    sa.ForeignKeyConstraint(['product_id_2'], ['product.id'], ),
    sa.PrimaryKeyConstraint('product_id_1', 'product_id_2')
    )
    op.create_table('prod_nutrient_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('nutrient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['nutrient_id'], ['nutrient.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prod_process_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.Column('nutrient_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['nutrient_id'], ['nutrient.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('prod_process_co2_association',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.Column('process_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['process_id'], ['process.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('synonym_prod_association',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('synonym_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['synonym_name'], ['synonym.name'], ),
    sa.PrimaryKeyConstraint('product_id', 'synonym_name')
    )
    op.create_table('tag_prod_association',
    sa.Column('product_id', sa.Integer(), nullable=False),
    sa.Column('tag_name', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.ForeignKeyConstraint(['tag_name'], ['tag.name'], ),
    sa.PrimaryKeyConstraint('product_id', 'tag_name')
    )
    op.create_table('template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('unit_weight',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('product_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['id'], ['scivalue.id'], ),
    sa.ForeignKeyConstraint(['product_id'], ['product.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('unit_weight')
    op.drop_table('template')
    op.drop_table('tag_prod_association')
    op.drop_table('synonym_prod_association')
    op.drop_table('prod_process_co2_association')
    op.drop_table('prod_process_association')
    op.drop_table('prod_nutrient_association')
    op.drop_table('prod_alternatives')
    op.drop_table('prod_allergene_association')
    op.drop_table('location_scivalue_association')
    op.drop_table('location_prod_association')
    op.drop_table('foodwaste')
    op.drop_table('edb_product')
    op.drop_table('density')
    op.drop_table('co2')
    op.drop_table('scivalue')
    op.drop_table('product')
    op.drop_table('tag')
    op.drop_table('synonym')
    op.drop_table('results')
    op.drop_table('reference')
    op.drop_table('process')
    op.drop_table('nutrient')
    op.drop_table('location')
    op.drop_table('allergene')
    ### end Alembic commands ###
